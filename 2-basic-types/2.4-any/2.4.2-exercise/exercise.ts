// --------------------------------------------------------------------------
// ✅ TypeScript의 `any` 타입
// --------------------------------------------------------------------------

// 1. `any` 타입으로 변수를 선언하고 문자열 값을 할당하세요.

let num: any = 'apple'

// 2. 그 변수를 숫자로 다시 할당하세요.

num = 31
// 3. 그 변수를 name 프로퍼티가 "TS"인 객체로 다시 할당하세요.

num = {name: 'TS'}
// 4. 매개변수 타입이 `any`인 함수를 만들고, 그 타입과 값을 로그로 출력하세요.

function sun(value: any) {
    console.log(typeof value, value)
}

sun(40)
sun('this')
// 5. 그 함수를 문자열, 숫자, 객체, 배열 등 다양한 타입의 인자로 호출하세요.

sun('word')
sun(50)
sun({name: 'minji', gender: 'female'})
sun([1, 2, 3])
// 6. TypeScript에서 `any`를 사용하는 것이 왜 유용할 수도 있고, 동시에 문제가 될 수도 있는지 설명하세요.

// 자바스크립트에서 타입스크립트로 마이그레이션할때 발생하는 여러 오류를 한번에 무시되게 할 수 있어서 유용한 측면이 있습니다.
// 하지만, 타입스크립트의 목적인 오류를 잡는 것을 막을 수 있기 때문에 문제가 될 수 있습니다.